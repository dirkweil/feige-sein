<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright (c) 2013 GEDOPLAN Unternehmensberatung und EDV-Organisation GmbH Stieghorster Str. 60, D-33605 Bielefeld, Germany http://www.gedoplan.de All rights reserved. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>de.gedoplan</groupId>
    <artifactId>build-master</artifactId>
    <version>2018.1.2</version>
  </parent>

  <artifactId>feige-sein</artifactId>
  <version>8.0.0-SNAPSHOT</version>

  <packaging>war</packaging>

  <repositories>
    <repository>
      <id>gedoplanPublic</id>
      <url>http://service.gedoplan.de/nexus/content/groups/public</url>
    </repository>

    <repository>
      <id>prime</id>
      <url>http://repository.primefaces.org</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>gedoplanPublic</id>
      <url>http://service.gedoplan.de/nexus/content/groups/public</url>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <deltaspike.version>1.9.0</deltaspike.version>
    <wildfly.version>16.0.0.Final</wildfly.version>

    <arquillian.container.qualifier>unspecified</arquillian.container.qualifier>
    <arquillian.container.config><![CDATA[
      <defaultProtocol type="Servlet 3.0" />
      <container qualifier="${arquillian.container.qualifier}" default="true">
      </container>
    ]]></arquillian.container.config>

    <arquillian.webdriver.browser>htmlUnit</arquillian.webdriver.browser>
    <arquillian.webdriver.config><![CDATA[
      <extension qualifier="webdriver">
        <property name="browser">${arquillian.webdriver.browser}</property>
      </extension>
    ]]></arquillian.webdriver.config>

    <db.properties><![CDATA[
      <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
      <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:test;DB_CLOSE_DELAY=-1"/>
      <property name="javax.persistence.jdbc.user" value="test"/>
      <property name="javax.persistence.jdbc.password" value="test"/>
    ]]></db.properties>

    <javax.persistence.provider>org.hibernate.ejb.HibernatePersistence</javax.persistence.provider>
    <jpa.se.classes></jpa.se.classes>
    <jpa.se.mainjarfile><![CDATA[<jar-file>file:///${project.build.outputDirectory}</jar-file>]]></jpa.se.mainjarfile>
    <jpaprovider.properties>
      jpaprovider.name=Hibernate
      jpaprovider.version=${hibernate.version}
    </jpaprovider.properties>

    <server.port.prefix>1</server.port.prefix>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>2.9.1</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>1.3</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian.selenium</groupId>
        <artifactId>selenium-bom</artifactId>
        <version>3.13.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.4.1.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-drone-bom</artifactId>
        <version>2.5.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>8.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.193</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>de.gedoplan</groupId>
      <artifactId>baselibs-naming</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>de.gedoplan</groupId>
      <artifactId>baselibs-persistence</artifactId>
      <version>1.6</version>
    </dependency>

    <dependency>
      <groupId>de.gedoplan</groupId>
      <artifactId>baselibs-utils</artifactId>
      <version>1.6</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jul</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.deltaspike.core</groupId>
      <artifactId>deltaspike-core-api</artifactId>
      <version>${deltaspike.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.deltaspike.core</groupId>
      <artifactId>deltaspike-core-impl</artifactId>
      <version>${deltaspike.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.deltaspike.cdictrl</groupId>
      <artifactId>deltaspike-cdictrl-api</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.deltaspike.cdictrl</groupId>
      <artifactId>deltaspike-cdictrl-weld</artifactId>
      <version>${deltaspike.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>5.4.2.Final</version>
      <exclusions>
        <exclusion>
          <groupId>org.hibernate.javax.persistence</groupId>
          <artifactId>hibernate-jpa-2.0-api</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- <dependency> -->
    <!-- <groupId>org.jboss.arquillian.extension</groupId> -->
    <!-- <artifactId>arquillian-drone-selenium</artifactId> -->
    <!-- <scope>test</scope> -->
    <!-- </dependency> -->

    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-drone-webdriver-depchain</artifactId>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

<!--     <dependency> -->
<!--       <groupId>org.jboss.arquillian.extension</groupId> -->
<!--       <artifactId>arquillian-drone-selenium-server</artifactId> -->
<!--       <scope>test</scope> -->
<!--     </dependency> -->

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>4.0.0.Final</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.descriptors</groupId>
      <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se-core</artifactId>
      <version>2.1.0.Final</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-server</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.6</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-core</artifactId>
      <version>3.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <arquillian.launch>${arquillian.container.qualifier}</arquillian.launch>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <profiles>
    <!-- Profil für die Ausführung der Tests mit einem gemanagten WildFly-Server. Die Server-Software wird bei Bedarf heruntergeladen und in target/wildfly... installiert. Der Server wird für die Tests
      automatisch gestartet und nachher wieder gestoppt. Achtung: Dieses Profil ist nicht vollständig innerhalb von Eclipse nutzbar, da m2e die Dependency- und Antrun-Plugins nicht unterstützt! Der Download,
      die Installation und KOnfiguration des Servers muss von der Kommandozeile aus durchgeführt werden. -->
    <profile>
      <id>wildfly-managed</id>

      <properties>
        <server.type>wildfly</server.type>
        <server.version>${wildfly.version}</server.version>

        <arquillian.container.qualifier>wildfly-managed</arquillian.container.qualifier>

        <skipTests>false</skipTests>

        <wildfly.home>${project.build.directory}/wildfly-${server.version}</wildfly.home>

        <wildfly.port.offset>${server.port.prefix}0000</wildfly.port.offset>
        <wildfly.port.remote>${server.port.prefix}8080</wildfly.port.remote>
        <wildfly.port.web>${server.port.prefix}8080</wildfly.port.web>
        <wildfly.port.management>${server.port.prefix}9990</wildfly.port.management>

        <server.url.remote>localhost:${wildfly.port.remote}</server.url.remote>
        <server.url.web>http://localhost:${wildfly.port.web}</server.url.web>

        <arquillian.container.config><![CDATA[
          <defaultProtocol type="Servlet 3.0" />
          <container qualifier="${arquillian.container.qualifier}" default="true">
            <configuration>
              <property name="jbossHome">${wildfly.home}</property>
              <property name="serverConfig">standalone-full.xml</property>
              <property name="javaVmArguments">-Xmx512m -Djboss.socket.binding.port-offset=${wildfly.port.offset}</property>
              <property name="managementPort">${wildfly.port.management}</property>"
            </configuration>
          </container>
        ]]></arquillian.container.config>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <version>2.2.0.Final</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>de.gedoplan</groupId>
          <artifactId>baselibs-wildfly</artifactId>
          <version>14.0.1_01</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <!-- Server downloaden und unter target installieren -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>

                      <groupId>org.wildfly</groupId>
                      <artifactId>wildfly-dist</artifactId>
                      <version>${server.version}</version>
                      <type>zip</type>

                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Server-Konfiguration eintragen -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>configServer</id>
                <phase>process-test-classes</phase>
                <configuration>
                  <target>
                    <copy todir="${wildfly.home}" overwrite="true">
                      <fileset dir="src/test/resources/integrationtest/wildfly" includes="**" excludes="**/*readme*" />
                    </copy>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profil für Tests mit einem bereits laufenden WildFly. Es wird angenommen, dass der Server passend konfiguriert ist. -->
    <profile>
      <id>wildfly-remote</id>

      <properties>
        <server.type>wildfly</server.type>
        <server.version>${wildfly.version}</server.version>

        <server.port.prefix></server.port.prefix>

        <wildfly.port.offset>0</wildfly.port.offset>
        <wildfly.port.remote>8080</wildfly.port.remote>
        <wildfly.port.web>8080</wildfly.port.web>
        <wildfly.port.management>9990</wildfly.port.management>

        <server.url.remote>localhost:${wildfly.port.remote}</server.url.remote>
        <server.url.web>http://localhost:${wildfly.port.web}</server.url.web>

        <arquillian.container.qualifier>wildfly-remote</arquillian.container.qualifier>

        <skipTests>false</skipTests>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
          <version>2.2.0.Final</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>de.gedoplan</groupId>
          <artifactId>baselibs-wildfly</artifactId>
          <version>14.0.1_01</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <!-- Die nun folgenden Profile können zur Auswahl des Browsers genutzt werden, der in den Arquillian/Drone/Selenium-Tests verwendet werden soll. Per Default wird HtmlUnit verwendet, d. h. ohne echten
      Browser (headless) getestet. -->
    <profile>
      <id>astest_browser_firefox</id>
      <properties>
        <arquillian.webdriver.browser>firefox</arquillian.webdriver.browser>
        <!-- <selenium.version>2.43.0</selenium.version> -->
      </properties>
    </profile>

    <profile>
      <id>astest_browser_phantomjs</id>
      <properties>
        <arquillian.webdriver.browser>phantomjs</arquillian.webdriver.browser>
      </properties>
    </profile>

    <!-- Diese folgenden Profile sind für die Ausführung in Hudson/Jenkins gedacht. Abhängig vom Build Processor können damit Ports in einem (hoffentlich) freien Bereich gewaehlt werden. Im Aufruf muss
      dazu die Option -Pastest_ports_${EXECUTOR_NUMBER} angegeben werden. -->
    <!-- Profil zur Aktivierung von Nicht-Standard-Ports im Bereich ab 10000 (default). -->
    <profile>
      <id>astest_ports_0</id>
    </profile>

    <!-- Profil zur Aktivierung von Nicht-Standard-Ports im Bereich ab 20000. -->
    <profile>
      <id>astest_ports_1</id>
      <properties>
        <server.port.prefix>2</server.port.prefix>
      </properties>
    </profile>
  </profiles>
</project>